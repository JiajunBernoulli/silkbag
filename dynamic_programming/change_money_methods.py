# nums = [50, 20, 10, 5, 2]
'''
具体思路同背包问题，这里只分析一下动态转化方程，
能用这种零钱，分为用了这种零钱的方法跟没用到这种零钱的方法，dp[i][j] = dp[i-1][j] + dp[i][j-num[i]]；
如果不能用这种零钱，即所组成的面额小于当前零钱，直接等于不用这种零钱的数值，dp[i][j] = dp[i-1][j]。

这里要特别注意的是。1、开始填写二维数组边界值时，第一行是填写只用第一种面额零钱组成相应数额的方法，
要注意是总数额除以第一种面额取余为0才能组成，即如果第一种面额为2，不能组成3,5的数额等；
2、填写二维数组第一列时，代表到用到面额为i时，剩余数额为0，即只用i就可以组成相应数额，
这也是一种方法，所以第一列的值全为1.
'''
nums=[20, 10]
m = len(nums)
target = 60
dp = [[0 for i in range(0, target+1)] for j in range(0, m)]
for j in range(0, target+1):      # 第一行初始化
    if j % nums[0] == 0:
        dp[0][j] = 1
for i in range(0, m):                       # 第一列初始化为1
    dp[i][0] = 1

for i in range(1, m):
    # j为需要组成的目标
    for j in range(1, target+1):
        if j < nums[i-1]:           # 目标小于第i个面额（对应数组索引为i-1的）
            dp[i][j] = dp[i-1][j]     # 不需要用这张面额，直接等于前一种方法数
        else:
            dp[i][j] = dp[i-1][j]+dp[i][j-nums[i-1]]      # 不用+用这张
print(dp[m-1][target])